set oldFile ""
set oldCode ""
set oldLine 0
set oldPos 0

proc do_next_instr
    switch next_instr
    case "print"
        call print_instruction

    case "set"
        call set_instruction

    case "add"
        set math_op "+"
        call math_instruction

    case "sub"
        set math_op "-"
        call math_instruction

    case "mul"
        set math_op "*"
        call math_instruction

    case "div"
        set math_op "/"
        call math_instruction

    case "mod"
        set math_op "%"
        call math_instruction

    case "concat"
        call concat_instruction

    case "setkey"
        call setkey_instruction

    case "getkey"
        call getkey_instruction

    case "proc"
        call proc_instruction

    case "end"
        call end_instruction
    
    case "call"
        call call_instruction
    
    case "return"
        call return_instruction

    case "eq"
        set comp_op "=="
        call comp_instruction
    
    case "less"
        set comp_op "<"
        call comp_instruction

    case "greater"
        set comp_op ">"
        call comp_instruction

    case "not"
        call not_instruction
    
    case "and"
        set logical_op "&&"
        call logical_instruction

    case "or"
        set logical_op "||"
        call logical_instruction

    case "if"
        call if_instruction
    
    case "else"
        call else_instruction

    case "while"
        call while_instruction
    
    case "break"
        call break_instruction

    case "#"
        call is_paramend
        not paramend_ret
        while paramend_ret
            call get_next_param
            call is_paramend
            not paramend_ret
        end

    case "switch"
        call switch_instruction

    case "case"
        call case_instruction

    case "default"
        call default_instruction

    case "push"
        call push_instruction

    case "pop"
        call pop_instruction

    case "top"
        call top_instruction

    case "include"
        # Save old file
        set in_imported false
        eq in_imported oldFile ""
        not in_imported
        if in_imported
            set error "cannot import from imported file"
            return
        end

        set oldCode code
        set oldFile file
        set oldPos pos
        set oldLine line

        # Read
        call get_next_param
        set file next_param
        read code file
        set pos 0
        set line 0

        # From below
        set include_parse_running true
        while include_parse_running
            call next_instruction
            if outofrange
                set include_parse_running false
            end

            if include_parse_running
                set error ""
                call do_next_instr

                set parse_haserror false
                eq parse_haserror error ""
                not parse_haserror
                if parse_haserror
                    set error_msg ""
                    concat error_msg file
                    concat error_msg ":"

                    set error_num ""
                    itoa error_num line
                    concat error_msg error_num

                    concat error_msg ": "
                    concat error_msg error
                    print error_msg
                    exit 1
                end
            end
        end

        # Prev file
        set code oldCode
        set file oldFile
        set line oldLine
        set pos oldPos
        set oldCode ""
        set oldFile ""
        set oldLine 0
        set oldPos 0
        
    default
        set error_msg "unknown instruction: \"" #"
        concat error_msg next_instr
        concat error_msg "\"" #"
        print error_msg
        exit 1
    end
end

proc parse
    set parse_running true
    while parse_running
        call next_instruction
        if outofrange
            set parse_running false
        end

        if parse_running
            set error ""
            call do_next_instr

            set parse_haserror false
            eq parse_haserror error ""
            not parse_haserror
            if parse_haserror
                set error_msg ""
                concat error_msg file
                concat error_msg ":"

                set error_num ""
                itoa error_num line
                concat error_msg error_num

                concat error_msg ": "
                concat error_msg error
                print error_msg
                exit 1
            end
        end
    end
end